{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["newTimeSlice","Date","toUTCString","slice","Clock","state","time","timerId","this","window","setInterval","setState","console","info","prevProps","name","props","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","hasClock","clockName","prevClockName","watchVisibilityOff","event","preventDefault","watchVisibilityOn","document","addEventListener","_prevProps","prevState","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAUMA,EAAe,WAGnB,OAFa,IAAIC,MAELC,cAAcC,OAAO,IAAK,IAG3BC,EAAb,4MACEC,MAAQ,CACNC,KAAMN,KAFV,EAKEO,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEL,KAAMN,MAGtBY,QAAQC,KAAK,EAAKR,MAAMC,QACvB,OAbP,gCAgBE,SAAmBQ,GACbA,EAAUC,OAASP,KAAKQ,MAAMD,MAEhCH,QAAQK,MAAR,uBACkBH,EAAUC,KAD5B,eACuCP,KAAKQ,MAAMD,SApBxD,kCAyBE,WACEG,cAAcV,KAAKD,WA1BvB,oBA6BE,WACE,IAAQD,EAASE,KAAKH,MAAdC,KACAS,EAASP,KAAKQ,MAAdD,KAER,OACE,sBAAKI,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGb,WA1CX,GAA2Bc,aCZ3B,SAASC,IACP,IAAMC,EAAQrB,KAAKsB,MAAMC,WAAWrB,OAAO,GAE3C,MAAM,SAAN,OAAgBmB,GASX,IAAMG,EAAb,4MAQEpB,MAAQ,CACNqB,UAAU,EACVC,UAAW,UACXC,cAAe,IAXnB,EAcErB,QAAU,EAdZ,EAkCEsB,mBAAqB,SAACC,GACpBA,EAAMC,iBACN,EAAKpB,SAAS,CAAEe,UAAU,KApC9B,EAuCEM,kBAAoB,WAClB,EAAKrB,SAAS,CAAEe,UAAU,KAxC9B,uDAgBE,WAAqB,IAAD,OAClBO,SAASC,iBAAiB,cAAe1B,KAAKqB,oBAC9CI,SAASC,iBAAiB,QAAS1B,KAAKwB,mBAExCxB,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEgB,UAAWN,QAC1B,QAtBP,gCAyBE,SAAmBc,EAAgBC,GACjC5B,KAAKH,MAAMuB,cAAgBQ,EAAUT,YA1BzC,kCA6BE,WACEM,SAASI,oBAAoB,cAAe7B,KAAKqB,oBACjDI,SAASI,oBAAoB,QAAS7B,KAAKwB,qBA/B/C,oBA2CE,WACE,MAAgCxB,KAAKH,MAA7BqB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKR,UAAU,MAAf,UACE,6CACCO,GAAY,cAAC,EAAD,CAAOX,KAAMY,WAjDlC,GAAyBP,aCbzBkB,IAASC,OACP,cAAC,EAAD,IACAN,SAASO,eAAe,W","file":"static/js/main.a479f8b0.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  time: string;\n};\n\ntype Props = {\n  name: string\n};\n\nconst newTimeSlice = () => {\n  const date = new Date();\n\n  return date.toUTCString().slice(-12, -4);\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    time: newTimeSlice(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ time: newTimeSlice() });\n\n      // eslint-disable-next-line no-console\n      console.info(this.state.time);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.debug(\n        `Renamed from ${prevProps.name} to ${this.props.name}`,\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { time } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {time}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n  prevClockName: string;\n};\n\nexport class App extends Component<{}, State> {\n  // // This code starts a timer\n  // const timerId = window.setInterval(() => {\n  //   clockName = getRandomName();\n  // }, 3300);\n\n  // // this code stops the timer\n  // window.clearInterval(timerId);\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n    prevClockName: '',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.watchVisibilityOff);\n    document.addEventListener('click', this.watchVisibilityOn);\n\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentDidUpdate(_prevProps: {}, prevState: State) {\n    this.state.prevClockName = prevState.clockName;\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.watchVisibilityOff);\n    document.removeEventListener('click', this.watchVisibilityOn);\n  }\n\n  watchVisibilityOff = (event: Event) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  watchVisibilityOn = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}